services:
  postgres:
    image: postgres:17.6-alpine3.22
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
      - ./volumes/postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_USER}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  auth:
    build: .
    environment:
      WEBSOCKET_URL: ${WEBSOCKET_URL}
      TOKEN: ${TOKEN}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      ENVIRONMENT: ${ENVIRONMENT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB_DEVELOPMENT: ${POSTGRES_DB_DEVELOPMENT}
      POSTGRES_DB_PRODUCTION: ${POSTGRES_DB_PRODUCTION}
      POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
      MIN_NAME_LENGTH: ${MIN_NAME_LENGTH}
      MAX_NAME_LENGTH: ${MAX_NAME_LENGTH}
      MIN_USERNAME_LENGTH: ${MIN_USERNAME_LENGTH}
      MAX_USERNAME_LENGTH: ${MAX_USERNAME_LENGTH}
      MIN_EMAIL_LENGTH: ${MIN_EMAIL_LENGTH}
      MAX_EMAIL_LENGTH: ${MAX_EMAIL_LENGTH}
      MIN_PASSWORD_LENGTH: ${MIN_PASSWORD_LENGTH}
      MAX_PASSWORD_LENGTH: ${MAX_PASSWORD_LENGTH}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
